generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  email    String    @unique
  pUser    String    @default("")
  token    String    @default("")
  api_key  String    @default("")
  diagrams Diagram[]
}

model Diagram {
  id        Int      @id @default(autoincrement())
  name      String?
  userId    Int?
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  nodes     Node[]
  edges     Edge[]
  data      Data[]
  createdAt DateTime @default(now())
}

model Data {
  id          Int      @id @default(autoincrement())
  internalId  String
  name        String
  iso         String?
  cores       Int?
  cpulimit    Int?
  description String?
  freeze      Boolean?
  memory      Int?
  onBoot      Boolean?
  Diagram     Diagram? @relation(fields: [diagramId], references: [id], onDelete: Cascade)
  diagramId   Int?
}

model Node {
  id                Int      @id @default(autoincrement())
  internalId        String
  xPos              Float
  yPos              Float
  dataLabel         String
  dataIcon          String
  dataTopHandles    Int?
  dataBottomHandles Int?
  Diagram           Diagram? @relation(fields: [diagramId], references: [id], onDelete: Cascade)
  diagramId         Int?
}

model Edge {
  id         Int      @id @default(autoincrement())
  internalId String
  source     String
  target     String
  Diagram    Diagram? @relation(fields: [diagramId], references: [id], onDelete: Cascade)
  diagramId  Int?
}
